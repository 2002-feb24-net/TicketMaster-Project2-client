trigger:
- master

pr:
- master

stages:

- stage: build

  variables:
    nodeVersion: 13.x
    appDir: ticket-master

  jobs:

  - job: build

    pool:
      vmImage: ubuntu-latest

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: node $(nodeVersion)

    - script: npm ci
      workingDirectory: $(appDir)
      displayName: npm install

    - script: npx ng build --outputPath $(Build.ArtifactStagingDirectory)/app --prod
      workingDirectory: $(appDir)
      displayName: ng build

    - publish: $(Build.ArtifactStagingDirectory)/app
      artifact: app
      displayName: artifact publish app

  - job: test

    pool:
      vmImage: ubuntu-latest

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: node $(nodeVersion)

    - script: npm ci
      workingDirectory: $(appDir)
      displayName: npm install

    # - task: SonarCloudPrepare@1
    #   inputs:
    #     SonarCloud: 'SonarCloud'
    #     organization: 2002-feb24-net
    #     scannerMode: CLI
    #     configMode: manual
    #     cliProjectKey: 2002-feb24-net_TicketMaster-Project2-client
    #     cliProjectName: TicketMaster-Project2-client
    #     cliSources: $(appDir)/src
    #     extraProperties: |
    #       sonar.coverage.exclusions=**/*.spec.ts
    #       sonar.typescript.lcov.reportPaths=$(appDir)/coverage/$(appDir)/lcov.info
    #   continueOnError: true
    #   displayName: sonarcloud analysis prepare

    - script: npx ng test --browsers ChromeHeadless --no-watch --code-coverage
      workingDirectory: $(appDir)
      continueOnError: true
      displayName: ng test

    - script: npm run lint
      workingDirectory: $(appDir)
      continueOnError: true
      displayName: ng lint

    # - task: SonarCloudAnalyze@1
    #   continueOnError: true
    #   displayName: sonarcloud analysis run

    # - task: SonarCloudPublish@1
    #   continueOnError: true
    #   displayName: sonarcloud results build publish

- stage: deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: build

  jobs:

  - deployment: deploy_dev

    pool:
      vmImage: ubuntu-latest

    environment: dev

    strategy:
      runOnce:
        deploy:
          steps:

          - download: current
            artifact: app
            displayName: artifact download app

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: AzureRM
              azureSubscription: Azure subscription 1(8a330e65-2e41-410e-b0f2-1d3dc58edcec)
              appType: webApp
              WebAppName: ticketmasterproject2
              packageForLinux: $(Pipeline.Workspace)/app
            displayName: azure app service deploy